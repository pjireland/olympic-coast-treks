# .github/workflows/deploy.yml
name: Deploy to Google Cloud Run

on:
  release:
    types: [published]
  workflow_dispatch: # Allows manual triggering

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: olympic-coast-treks
  REGION: us-west1

jobs:
  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug secrets
        run: |
          echo "Project ID length: ${#GCP_PROJECT_ID}"
          echo "WIF Provider length: ${#WIF_PROVIDER}"
          echo "WIF Service Account length: ${#WIF_SERVICE_ACCOUNT}"
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          WIF_PROVIDER: ${{ secrets.WIF_PROVIDER }}
          WIF_SERVICE_ACCOUNT: ${{ secrets.WIF_SERVICE_ACCOUNT }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use gcloud as credential helper
        run: gcloud auth configure-docker

      - name: Build Docker image
        run: |
          docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.event.release.tag_name }} .
          docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:latest .

      - name: Push Docker image
        run: |
          docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.event.release.tag_name }}
          docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.event.release.tag_name }} \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated \
            --max-instances=3 \
            --timeout=30s \
            --cpu=1 \
            --memory=512Mi \
            --concurrency=10

      - name: Get service URL
        run: |
          SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --platform managed --region $REGION --format 'value(status.url)')
          echo "Service deployed at: $SERVICE_URL"
          echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_ENV

      - name: Create deployment comment
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `ðŸš€ Deployed to Cloud Run: ${process.env.SERVICE_URL}`
            })
